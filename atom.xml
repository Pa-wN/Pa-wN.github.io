<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa-wN</title>
  
  <subtitle>hello word</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-27T16:31:54.503Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>paw-N</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入理解之line-height</title>
    <link href="http://yoursite.com/2018/02/28/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E4%B9%8Bline-height/"/>
    <id>http://yoursite.com/2018/02/28/深入理解之line-height/</id>
    <published>2018-02-27T16:30:07.000Z</published>
    <updated>2018-02-27T16:31:54.503Z</updated>
    
    <content type="html"><![CDATA[<p>###一、line-height 介绍</p><blockquote><p>linge-height 指两行文字之间的基线距离<br><img src="http://upload-images.jianshu.io/upload_images/9163297-862134d0f282b2cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>行高的属性<br><img src="http://upload-images.jianshu.io/upload_images/9163297-b00bc3fbcde184af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>#####1、normal 行高的默认值<br>该值一般为数值。不同的字体有不同的值，该值由字体的设计者提供。<br>也正是该值是由不同的字体决定的，所以默认的行内盒子，在设置不同的字体时会有不同的高度。</li></ul></blockquote><p>#####2、number </p><blockquote><p>该值为字体的倍数值</p></blockquote><p>#####3、 length 固定单位值</p><blockquote><p>px em rem pt</p></blockquote><p>#####4、百分比</p><blockquote><p>该值为字体的倍数</p></blockquote><p>#####5、继承</p><ul><li>数值、百分比、em的区别在于他们的继承性质<blockquote><p>数值继承的是父元素设置的值，再根据自己的字体大小来计算得出值<br>百分比和em则是继承父级计算好了之后的值<br>例如字体大小为60px, 父级字体为30px<br>如果父级行高为 1.5 那么他的子元素行高为 1.5 <em> 60<br>如果父级行高为 150% / 1.5em 那么他的子元素行高为 1.5 </em> 30</p></blockquote></li></ul><a id="more"></a><p>###二、行内框盒子模型 </p><ul><li>一个行内框模型可能有以下几种盒子 <a href="http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">参考张鑫旭老师</a><br><img src="http://upload-images.jianshu.io/upload_images/9163297-7779185a8c8fb4a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="http://upload-images.jianshu.io/upload_images/9163297-aad5599657f98635.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p>1、内容区域指包含文字的区域，他的大小由font-size决定。</p><blockquote><p>同一个字体大小的不同文字，大小是不一样的，所以导致了他们的内容区域高度也会不一样</p></blockquote><p>2、内联盒有两种，一种为普通内联盒子和匿名内联盒子</p><blockquote><ul><li>普通内联盒子为可选择的，如（i / em / a）等标签。</li><li>匿名内联盒子是不可选择的，没有标签包含的普通文字组成。</li></ul></blockquote><p>3、行框盒子</p><blockquote><ul><li>行框盒子由每一行的内联盒子组成，<code>&lt;br/&gt;</code>换行或者高度不足换行都会新生成一个行框盒子。行框盒子会尽可能包含该行内的所有内联盒子。</li></ul></blockquote><p>4、包含盒子包含了所有的行框盒子，高度由各个行框盒子高度的累加。</p><p>###三、内联盒子的高度<br>1、内联盒子的高度由行高间接来决定的。</p><blockquote><p>内联盒子的高度是由 <strong>行间距</strong>和<strong>内容区域</strong>决定其的高度的,但是因为行间距的高度 + 内容区域的高度 必须 = 行高，所以如果设置了行高，就会间接的决定了高度。</p></blockquote><h3 id="四、行高的应用"><a href="#四、行高的应用" class="headerlink" title="四、行高的应用"></a>四、行高的应用</h3><p>1、设置行高实现<strong>近似</strong>文字的垂直居中, 不必设置高度。</p><p>2、实现多行文本垂直居中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  background: #ccc;</span><br><span class="line">  line-height: 200px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box &gt; .text &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  line-height: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、实现图片<strong>近似</strong>垂直居中，</p><blockquote><p><img src="http://upload-images.jianshu.io/upload_images/9163297-5d6ff2ed8a3325a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###一、line-height 介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;linge-height 指两行文字之间的基线距离&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/9163297-862134d0f282b2cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;行高的属性&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/9163297-b00bc3fbcde184af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;br&gt;#####1、normal 行高的默认值&lt;br&gt;该值一般为数值。不同的字体有不同的值，该值由字体的设计者提供。&lt;br&gt;也正是该值是由不同的字体决定的，所以默认的行内盒子，在设置不同的字体时会有不同的高度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;#####2、number &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该值为字体的倍数值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#####3、 length 固定单位值&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;px em rem pt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#####4、百分比&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该值为字体的倍数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#####5、继承&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数值、百分比、em的区别在于他们的继承性质&lt;blockquote&gt;
&lt;p&gt;数值继承的是父元素设置的值，再根据自己的字体大小来计算得出值&lt;br&gt;百分比和em则是继承父级计算好了之后的值&lt;br&gt;例如字体大小为60px, 父级字体为30px&lt;br&gt;如果父级行高为 1.5 那么他的子元素行高为 1.5 &lt;em&gt; 60&lt;br&gt;如果父级行高为 150% / 1.5em 那么他的子元素行高为 1.5 &lt;/em&gt; 30&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>flex</title>
    <link href="http://yoursite.com/2018/01/16/flex%E7%AE%80%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/01/16/flex简记/</id>
    <published>2018-01-15T18:31:12.000Z</published>
    <updated>2018-02-27T15:40:21.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="弹性盒子布局-参考-阮一峰老师"><a href="#弹性盒子布局-参考-阮一峰老师" class="headerlink" title="弹性盒子布局 参考 阮一峰老师"></a>弹性盒子布局 参考 <a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">阮一峰老师</a></h3><p>兼容性<br><img src="http://upload-images.jianshu.io/upload_images/9163297-e812fc4b4118c88c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><blockquote><ul><li>设置为弹性盒子<em><code>display: flex</code></em> 要加上浏览器的前缀。</li><li>设置为弹性盒子后，他的子元素被称为项目；</li></ul></blockquote><ul><li>###盒子的属性<h3 id="flex-direction-：设置项目的排列方向-默认值-左到右"><a href="#flex-direction-：设置项目的排列方向-默认值-左到右" class="headerlink" title="flex-direction ：设置项目的排列方向 默认值 (左到右)"></a>flex-direction ：设置项目的排列方向 默认值 <strong>(左到右)</strong></h3><blockquote><ul><li>flex-direction: row       默认从左到右</li><li>flex-direction: row-reverse  从右排到左</li><li>flex-direction: column 从上排到下</li><li>flex-direction: column-reverse 从下排到上</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/9163297-5979cbafc0993c0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p></blockquote></li></ul><a id="more"></a><p><hr></p><p>###flex-wrap: 设置项目的换行方式 默认 (不换行)</p><blockquote><ul><li>flex-wrap: nowrap  不换行<br>PS:  不换行的情况下，盒子会尽量包含所有的项目，即使你设置了项目的宽度或高度，但你可以设置它的最小值,(min-width / min-height);</li><li>flex-wrap: wrap 换行</li><li>flex-wrap: reverse 换行，第一行在最后。</li></ul><p><hr></p><h3 id="flex-flow-flex-direction属性和flex-wrap属性的简写形式，默认值为row-nowrap。"><a href="#flex-flow-flex-direction属性和flex-wrap属性的简写形式，默认值为row-nowrap。" class="headerlink" title="flex-flow : flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。"></a>flex-flow : flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-flow: row nowrap</span><br></pre></td></tr></table></figure></blockquote><p><hr></p><p>###justify-content （水平对齐方式）</p><blockquote><p>justify-content: flex-start 左对齐<br>justify-content: flex-ent 右对齐<br>justify-content: center 居中对齐<br>justify-content: space-between 两端对齐<br>justify-content: space-around 平均对齐</p><p><img src="http://upload-images.jianshu.io/upload_images/9163297-1b4be11a949d2999.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><hr></p><p>###align-items 项目单一行垂直对齐方式 </p><ul><li>简单来说既是提供一条对齐线<br>flex-start 盒子顶端对齐<br>flex-end 盒子底端对齐<br>center 盒子垂直中线对齐<br>stretch 填满盒子高度<br>baseline: 基线对齐 （第一行文字）</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/9163297-9127ea84adc84049.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p></blockquote><hr><h3 id="align-content-项目多行垂直对齐方式"><a href="#align-content-项目多行垂直对齐方式" class="headerlink" title="align-content 项目多行垂直对齐方式"></a>align-content 项目多行垂直对齐方式</h3><blockquote><p>flex-start 盒子顶端对齐<br>flext-end 盒子底端对齐<br>center 盒子垂直中线对齐<br>stretch 拉升占满整个垂直盒子高度<br>space-between 两端对齐<br>pace-around 平均对齐</p><p><img src="http://upload-images.jianshu.io/upload_images/9163297-b8456973b2c1b19c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p></blockquote><p><hr></p><p>#项目属性</p><ul><li>#####order 项目的排列顺序</li><li>#####flex 一下属性的简写默认值是 0 1 auto<blockquote><p>flex-grow 水平放大比例<br>flex-shrink 水平缩小比例<br>flex-basis 水平固定比例</p></blockquote></li><li>######align-self 属性用于设置弹性元素自身在侧轴（纵轴）方向上的对齐方式。也就是单独设置该项目的<code>align-items</code>属性<br><img src="http://upload-images.jianshu.io/upload_images/9163297-69a5c730c0fd60df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;弹性盒子布局-参考-阮一峰老师&quot;&gt;&lt;a href=&quot;#弹性盒子布局-参考-阮一峰老师&quot; class=&quot;headerlink&quot; title=&quot;弹性盒子布局 参考 阮一峰老师&quot;&gt;&lt;/a&gt;弹性盒子布局 参考 &lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阮一峰老师&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;兼容性&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/9163297-e812fc4b4118c88c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;设置为弹性盒子&lt;em&gt;&lt;code&gt;display: flex&lt;/code&gt;&lt;/em&gt; 要加上浏览器的前缀。&lt;/li&gt;
&lt;li&gt;设置为弹性盒子后，他的子元素被称为项目；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;###盒子的属性&lt;h3 id=&quot;flex-direction-：设置项目的排列方向-默认值-左到右&quot;&gt;&lt;a href=&quot;#flex-direction-：设置项目的排列方向-默认值-左到右&quot; class=&quot;headerlink&quot; title=&quot;flex-direction ：设置项目的排列方向 默认值 (左到右)&quot;&gt;&lt;/a&gt;flex-direction ：设置项目的排列方向 默认值 &lt;strong&gt;(左到右)&lt;/strong&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;flex-direction: row       默认从左到右&lt;/li&gt;
&lt;li&gt;flex-direction: row-reverse  从右排到左&lt;/li&gt;
&lt;li&gt;flex-direction: column 从上排到下&lt;/li&gt;
&lt;li&gt;flex-direction: column-reverse 从下排到上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/9163297-5979cbafc0993c0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="aaa" scheme="http://yoursite.com/tags/aaa/"/>
    
  </entry>
  
</feed>
